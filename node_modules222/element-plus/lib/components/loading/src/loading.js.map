{"version":3,"file":"loading.js","sources":["../../../../../../packages/components/loading/src/loading.ts"],"sourcesContent":["import {\n  createApp,\n  h,\n  reactive,\n  ref,\n  createVNode,\n  toRefs,\n  Transition,\n  vShow,\n  withCtx,\n  withDirectives,\n} from 'vue'\nimport { removeClass } from '@element-plus/utils/dom'\n\nimport type { LoadingOptionsResolved } from './types'\n\nexport function createLoadingComponent(options: LoadingOptionsResolved) {\n  let afterLeaveTimer: number\n\n  const afterLeaveFlag = ref(false)\n  const data = reactive({\n    ...options,\n    originalPosition: '',\n    originalOverflow: '',\n    visible: false,\n  })\n\n  function setText(text: string) {\n    data.text = text\n  }\n\n  function destroySelf() {\n    const target = data.parent\n    if (!target.vLoadingAddClassList) {\n      let loadingNumber: number | string | null =\n        target.getAttribute('loading-number')\n      loadingNumber = Number.parseInt(loadingNumber as any) - 1\n      if (!loadingNumber) {\n        removeClass(target, 'el-loading-parent--relative')\n        target.removeAttribute('loading-number')\n      } else {\n        target.setAttribute('loading-number', loadingNumber.toString())\n      }\n      removeClass(target, 'el-loading-parent--hidden')\n    }\n    vm.$el?.parentNode?.removeChild(vm.$el)\n  }\n\n  function close() {\n    if (options.beforeClose && !options.beforeClose()) return\n\n    const target = data.parent\n    target.vLoadingAddClassList = undefined\n    afterLeaveFlag.value = true\n    clearTimeout(afterLeaveTimer)\n\n    afterLeaveTimer = window.setTimeout(() => {\n      if (afterLeaveFlag.value) {\n        afterLeaveFlag.value = false\n        destroySelf()\n      }\n    }, 400)\n    data.visible = false\n\n    options.closed?.()\n  }\n\n  function handleAfterLeave() {\n    if (!afterLeaveFlag.value) return\n    afterLeaveFlag.value = false\n    destroySelf()\n  }\n\n  const elLoadingComponent = {\n    name: 'ElLoading',\n    setup() {\n      return () => {\n        const svg = data.spinner || data.svg\n        const spinner = h(\n          'svg',\n          {\n            class: 'circular',\n            viewBox: data.svgViewBox ? data.svgViewBox : '25 25 50 50',\n            ...(svg ? { innerHTML: svg } : {}),\n          },\n          [\n            h('circle', {\n              class: 'path',\n              cx: '50',\n              cy: '50',\n              r: '20',\n              fill: 'none',\n            }),\n          ]\n        )\n\n        const spinnerText = data.text\n          ? h('p', { class: 'el-loading-text' }, [data.text])\n          : undefined\n\n        return h(\n          Transition,\n          {\n            name: 'el-loading-fade',\n            onAfterLeave: handleAfterLeave,\n          },\n          {\n            default: withCtx(() => [\n              withDirectives(\n                createVNode(\n                  'div',\n                  {\n                    style: {\n                      backgroundColor: data.background || '',\n                    },\n                    class: [\n                      'el-loading-mask',\n                      data.customClass,\n                      data.fullscreen ? 'is-fullscreen' : '',\n                    ],\n                  },\n                  [\n                    h(\n                      'div',\n                      {\n                        class: 'el-loading-spinner',\n                      },\n                      [spinner, spinnerText]\n                    ),\n                  ]\n                ),\n                [[vShow, data.visible]]\n              ),\n            ]),\n          }\n        )\n      }\n    },\n  }\n\n  const vm = createApp(elLoadingComponent).mount(document.createElement('div'))\n\n  return {\n    ...toRefs(data),\n    setText,\n    close,\n    handleAfterLeave,\n    vm,\n    get $el(): HTMLElement {\n      return vm.$el\n    },\n  }\n}\n\nexport type LoadingInstance = ReturnType<typeof createLoadingComponent>\n"],"names":["ref","reactive","h","Transition","withCtx","withDirectives","createVNode","vShow","createApp","toRefs"],"mappings":";;;;;;;gCAgBuC,SAAiC;AACtE,MAAI;AAEJ,QAAM,iBAAiBA,QAAI;AAC3B,QAAM,OAAOC,aAAS;AAAA,OACjB;AAAA,IACH,kBAAkB;AAAA,IAClB,kBAAkB;AAAA,IAClB,SAAS;AAAA;AAGX,mBAAiB,MAAc;AAC7B,SAAK,OAAO;AAAA;AAGd,yBAAuB;AA/BzB;AAgCI,UAAM,SAAS,KAAK;AACpB,QAAI,CAAC,OAAO,sBAAsB;AAChC,UAAI,gBACF,OAAO,aAAa;AACtB,sBAAgB,OAAO,SAAS,iBAAwB;AACxD,UAAI,CAAC,eAAe;AAClB,wBAAY,QAAQ;AACpB,eAAO,gBAAgB;AAAA,aAClB;AACL,eAAO,aAAa,kBAAkB,cAAc;AAAA;AAEtD,sBAAY,QAAQ;AAAA;AAEtB,mBAAG,QAAH,mBAAQ,eAAR,mBAAoB,YAAY,GAAG;AAAA;AAGrC,mBAAiB;AAhDnB;AAiDI,QAAI,QAAQ,eAAe,CAAC,QAAQ;AAAe;AAEnD,UAAM,SAAS,KAAK;AACpB,WAAO,uBAAuB;AAC9B,mBAAe,QAAQ;AACvB,iBAAa;AAEb,sBAAkB,OAAO,WAAW,MAAM;AACxC,UAAI,eAAe,OAAO;AACxB,uBAAe,QAAQ;AACvB;AAAA;AAAA,OAED;AACH,SAAK,UAAU;AAEf,kBAAQ,WAAR;AAAA;AAGF,8BAA4B;AAC1B,QAAI,CAAC,eAAe;AAAO;AAC3B,mBAAe,QAAQ;AACvB;AAAA;AAGF,QAAM,qBAAqB;AAAA,IACzB,MAAM;AAAA,IACN,QAAQ;AACN,aAAO,MAAM;AACX,cAAM,MAAM,KAAK,WAAW,KAAK;AACjC,cAAM,UAAUC,MACd,OACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS,KAAK,aAAa,KAAK,aAAa;AAAA,aACzC,MAAM,EAAE,WAAW,QAAQ;AAAA,WAEjC;AAAA,UACEA,MAAE,UAAU;AAAA,YACV,OAAO;AAAA,YACP,IAAI;AAAA,YACJ,IAAI;AAAA,YACJ,GAAG;AAAA,YACH,MAAM;AAAA;AAAA;AAKZ,cAAM,cAAc,KAAK,OACrBA,MAAE,KAAK,EAAE,OAAO,qBAAqB,CAAC,KAAK,SAC3C;AAEJ,eAAOA,MACLC,gBACA;AAAA,UACE,MAAM;AAAA,UACN,cAAc;AAAA,WAEhB;AAAA,UACE,SAASC,YAAQ,MAAM;AAAA,YACrBC,mBACEC,gBACE,OACA;AAAA,cACE,OAAO;AAAA,gBACL,iBAAiB,KAAK,cAAc;AAAA;AAAA,cAEtC,OAAO;AAAA,gBACL;AAAA,gBACA,KAAK;AAAA,gBACL,KAAK,aAAa,kBAAkB;AAAA;AAAA,eAGxC;AAAA,cACEJ,MACE,OACA;AAAA,gBACE,OAAO;AAAA,iBAET,CAAC,SAAS;AAAA,gBAIhB,CAAC,CAACK,WAAO,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAS5B,QAAM,KAAKC,cAAU,oBAAoB,MAAM,SAAS,cAAc;AAEtE,SAAO;AAAA,OACFC,WAAO;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,QACI,MAAmB;AACrB,aAAO,GAAG;AAAA;AAAA;AAAA;;;;"}