{"version":3,"file":"directive.js","sources":["../../../../../../packages/components/loading/src/directive.ts"],"sourcesContent":["import { isRef, ref } from 'vue'\nimport { isObject, isString, hyphenate } from '@vue/shared'\nimport { Loading } from './service'\nimport type { Directive, DirectiveBinding, UnwrapRef } from 'vue'\nimport type { LoadingOptions } from './types'\nimport type { LoadingInstance } from './loading'\n\nconst INSTANCE_KEY = Symbol('ElLoading')\n\nexport type LoadingBinding = boolean | UnwrapRef<LoadingOptions>\nexport interface ElementLoading extends HTMLElement {\n  [INSTANCE_KEY]?: {\n    instance: LoadingInstance\n    options: LoadingOptions\n  }\n}\n\nconst createInstance = (\n  el: ElementLoading,\n  binding: DirectiveBinding<LoadingBinding>\n) => {\n  const vm = binding.instance\n\n  const getBindingProp = <K extends keyof LoadingOptions>(\n    key: K\n  ): LoadingOptions[K] =>\n    isObject(binding.value) ? binding.value[key] : undefined\n\n  const resolveExpression = (key: any) => {\n    const data = (isString(key) && vm?.[key]) || key\n    if (data) return ref(data)\n    else return data\n  }\n\n  const getProp = <K extends keyof LoadingOptions>(name: K) =>\n    resolveExpression(\n      getBindingProp(name) ||\n        el.getAttribute(`element-loading-${hyphenate(name)}`)\n    )\n\n  const fullscreen =\n    getBindingProp('fullscreen') ?? binding.modifiers.fullscreen\n\n  const options: LoadingOptions = {\n    text: getProp('text'),\n    svg: getProp('svg'),\n    svgViewBox: getProp('svgViewBox'),\n    spinner: getProp('spinner'),\n    background: getProp('background'),\n    customClass: getProp('customClass'),\n    fullscreen,\n    target: getBindingProp('target') ?? (fullscreen ? undefined : el),\n    body: getBindingProp('body') ?? binding.modifiers.body,\n    lock: getBindingProp('lock') ?? binding.modifiers.lock,\n  }\n  el[INSTANCE_KEY] = {\n    options,\n    instance: Loading(options),\n  }\n}\n\nconst updateOptions = (\n  newOptions: UnwrapRef<LoadingOptions>,\n  originalOptions: LoadingOptions\n) => {\n  for (const key of Object.keys(originalOptions)) {\n    if (isRef(originalOptions[key]))\n      originalOptions[key].value = newOptions[key]\n  }\n}\n\nexport const vLoading: Directive<ElementLoading, LoadingBinding> = {\n  mounted(el, binding) {\n    if (binding.value) {\n      createInstance(el, binding)\n    }\n  },\n  updated(el, binding) {\n    const instance = el[INSTANCE_KEY]\n    if (binding.oldValue !== binding.value) {\n      if (binding.value && !binding.oldValue) {\n        createInstance(el, binding)\n      } else if (binding.value && binding.oldValue) {\n        if (isObject(binding.value))\n          updateOptions(binding.value, instance!.options)\n      } else {\n        instance?.instance.close()\n      }\n    }\n  },\n  unmounted(el) {\n    el[INSTANCE_KEY]?.instance.close()\n  },\n}\n"],"names":["isObject","isString","ref","hyphenate","Loading","isRef"],"mappings":";;;;;;;;AAOA,MAAM,eAAe,OAAO;AAU5B,MAAM,iBAAiB,CACrB,IACA,YACG;AApBL;AAqBE,QAAM,KAAK,QAAQ;AAEnB,QAAM,iBAAiB,CACrB,QAEAA,gBAAS,QAAQ,SAAS,QAAQ,MAAM,OAAO;AAEjD,QAAM,oBAAoB,CAAC,QAAa;AACtC,UAAM,OAAQC,gBAAS,kCAAa,SAAS;AAC7C,QAAI;AAAM,aAAOC,QAAI;AAAA;AAChB,aAAO;AAAA;AAGd,QAAM,UAAU,CAAiC,SAC/C,kBACE,eAAe,SACb,GAAG,aAAa,mBAAmBC,iBAAU;AAGnD,QAAM,aACJ,qBAAe,kBAAf,YAAgC,QAAQ,UAAU;AAEpD,QAAM,UAA0B;AAAA,IAC9B,MAAM,QAAQ;AAAA,IACd,KAAK,QAAQ;AAAA,IACb,YAAY,QAAQ;AAAA,IACpB,SAAS,QAAQ;AAAA,IACjB,YAAY,QAAQ;AAAA,IACpB,aAAa,QAAQ;AAAA,IACrB;AAAA,IACA,QAAQ,qBAAe,cAAf,YAA6B,aAAa,SAAY;AAAA,IAC9D,MAAM,qBAAe,YAAf,YAA0B,QAAQ,UAAU;AAAA,IAClD,MAAM,qBAAe,YAAf,YAA0B,QAAQ,UAAU;AAAA;AAEpD,KAAG,gBAAgB;AAAA,IACjB;AAAA,IACA,UAAUC,gBAAQ;AAAA;AAAA;AAItB,MAAM,gBAAgB,CACpB,YACA,oBACG;AACH,aAAW,OAAO,OAAO,KAAK,kBAAkB;AAC9C,QAAIC,UAAM,gBAAgB;AACxB,sBAAgB,KAAK,QAAQ,WAAW;AAAA;AAAA;MAIjC,WAAsD;AAAA,EACjE,QAAQ,IAAI,SAAS;AACnB,QAAI,QAAQ,OAAO;AACjB,qBAAe,IAAI;AAAA;AAAA;AAAA,EAGvB,QAAQ,IAAI,SAAS;AACnB,UAAM,WAAW,GAAG;AACpB,QAAI,QAAQ,aAAa,QAAQ,OAAO;AACtC,UAAI,QAAQ,SAAS,CAAC,QAAQ,UAAU;AACtC,uBAAe,IAAI;AAAA,iBACV,QAAQ,SAAS,QAAQ,UAAU;AAC5C,YAAIL,gBAAS,QAAQ;AACnB,wBAAc,QAAQ,OAAO,SAAU;AAAA,aACpC;AACL,6CAAU,SAAS;AAAA;AAAA;AAAA;AAAA,EAIzB,UAAU,IAAI;AA1FhB;AA2FI,aAAG,kBAAH,mBAAkB,SAAS;AAAA;AAAA;;;;"}