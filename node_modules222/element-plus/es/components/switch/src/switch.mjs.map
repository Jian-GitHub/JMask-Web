{"version":3,"file":"switch.mjs","sources":["../../../../../../packages/components/switch/src/switch.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils/props'\nimport {\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n  INPUT_EVENT,\n} from '@element-plus/utils/constants'\nimport { isBool, isNumber, isString } from '@element-plus/utils/util'\nimport type Switch from './switch.vue'\nimport type { Component, ExtractPropTypes } from 'vue'\n\nexport const switchProps = buildProps({\n  modelValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  value: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  width: {\n    type: Number,\n    default: 40,\n  },\n  inlinePrompt: {\n    type: Boolean,\n    default: false,\n  },\n  activeIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  inactiveIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  activeText: {\n    type: String,\n    default: '',\n  },\n  inactiveText: {\n    type: String,\n    default: '',\n  },\n  activeColor: {\n    type: String,\n    default: '',\n  },\n  inactiveColor: {\n    type: String,\n    default: '',\n  },\n  borderColor: {\n    type: String,\n    default: '',\n  },\n  activeValue: {\n    type: [Boolean, String, Number],\n    default: true,\n  },\n  inactiveValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  name: {\n    type: String,\n    default: '',\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  id: String,\n  loading: {\n    type: Boolean,\n    default: false,\n  },\n  beforeChange: {\n    type: definePropType<() => Promise<boolean> | boolean>(Function),\n  },\n} as const)\n\nexport type SwitchProps = ExtractPropTypes<typeof switchProps>\n\nexport const switchEmits = {\n  [UPDATE_MODEL_EVENT]: (val: boolean | string | number) =>\n    isBool(val) || isString(val) || isNumber(val),\n  [CHANGE_EVENT]: (val: boolean | string | number) =>\n    isBool(val) || isString(val) || isNumber(val),\n  [INPUT_EVENT]: (val: boolean | string | number) =>\n    isBool(val) || isString(val) || isNumber(val),\n}\nexport type SwitchEmits = typeof switchEmits\n\nexport type SwitchInstance = InstanceType<typeof Switch>\n"],"names":[],"mappings":";;;;;MAUa,cAAc,WAAW;AAAA,EACpC,YAAY;AAAA,IACV,MAAM,CAAC,SAAS,QAAQ;AAAA,IACxB,SAAS;AAAA;AAAA,EAEX,OAAO;AAAA,IACL,MAAM,CAAC,SAAS,QAAQ;AAAA,IACxB,SAAS;AAAA;AAAA,EAEX,UAAU;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,YAAY;AAAA,IACV,MAAM,eAAmC,CAAC,QAAQ;AAAA,IAClD,SAAS;AAAA;AAAA,EAEX,cAAc;AAAA,IACZ,MAAM,eAAmC,CAAC,QAAQ;AAAA,IAClD,SAAS;AAAA;AAAA,EAEX,YAAY;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,eAAe;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,aAAa;AAAA,IACX,MAAM,CAAC,SAAS,QAAQ;AAAA,IACxB,SAAS;AAAA;AAAA,EAEX,eAAe;AAAA,IACb,MAAM,CAAC,SAAS,QAAQ;AAAA,IACxB,SAAS;AAAA;AAAA,EAEX,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,eAAe;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,IAAI;AAAA,EACJ,SAAS;AAAA,IACP,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEX,cAAc;AAAA,IACZ,MAAM,eAAiD;AAAA;AAAA;MAM9C,cAAc;AAAA,GACxB,qBAAqB,CAAC,QACrB,OAAO,QAAQ,SAAS,QAAQ,SAAS;AAAA,GAC1C,eAAe,CAAC,QACf,OAAO,QAAQ,SAAS,QAAQ,SAAS;AAAA,GAC1C,cAAc,CAAC,QACd,OAAO,QAAQ,SAAS,QAAQ,SAAS;AAAA;;;;"}