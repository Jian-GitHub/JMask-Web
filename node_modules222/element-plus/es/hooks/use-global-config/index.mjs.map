{"version":3,"file":"index.mjs","sources":["../../../../../packages/hooks/use-global-config/index.ts"],"sourcesContent":["import { inject, toRef } from 'vue'\nimport { configProviderContextKey } from '@element-plus/tokens'\nimport type { Ref } from 'vue'\nimport type { ConfigProviderContext } from '@element-plus/tokens'\n\nexport function useGlobalConfig<K extends keyof ConfigProviderContext>(\n  key: K\n): Ref<ConfigProviderContext[K]>\nexport function useGlobalConfig(): ConfigProviderContext\nexport function useGlobalConfig(key?: keyof ConfigProviderContext) {\n  const config = inject(configProviderContextKey, {})\n  if (key) {\n    return toRef(config, key)\n  } else {\n    return config\n  }\n}\n"],"names":[],"mappings":";;;;yBASgC,KAAmC;AACjE,QAAM,SAAS,OAAO,0BAA0B;AAChD,MAAI,KAAK;AACP,WAAO,MAAM,QAAQ;AAAA,SAChB;AACL,WAAO;AAAA;AAAA;;;;"}